/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package toptour;



import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;

import java.sql.ResultSet;

import java.sql.Statement;
import java.time.LocalDate;

import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Michael Kuzyk
 */
public class View extends JFrame {
 static String status;
    Connection con;
    String SQL;
 Statement stmt ;  
      ResultSet rs;
      LocalDate localDate=LocalDate.now();
    /**
     * Creates new form NumberAddition
     * @throws java.text.ParseException
     */
    public View() {
   //MysqlConnect.bd(SQL, con, stmt, rs);
     initComponents(); //pingUrl.pingUrl();
     Internetstatus.run1();
      statuscheck_label.setText(pingUrl.pingUrl());
    /*Component[] com = jPanel1.getComponents();
for (int a = 0; a < com.length; a++) {
     com[a].setEnabled(false);}
disabled.setEnabled(true);*/
    comboFILL();
    updateTableMYSQL() ;
    //Установка окна по центру экрана--------------------------
   Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
   int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        
     this.setLocation(x, y);
   //-----------------------------------------------------------

   //Задержка главного экрана----------------------------------
 
 

        
      
   
   //----------------------------------------------------------
    }
    
    
    public void status(){
    statuscheck_label.setText(""+View.status+"");}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pasport_filter = new javax.swing.JFormattedTextField();
        filtre = new javax.swing.JButton();
        clear_zakazy = new javax.swing.JButton();
        city_ComboBox1 = new javax.swing.JComboBox<>();
        hotel_ComboBox1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        termin_ComboBox1 = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        koshik = new javax.swing.JTable();
        fon_panel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        passport_odrer_label = new javax.swing.JLabel();
        city_odrer_label = new javax.swing.JLabel();
        termin_odrer_label = new javax.swing.JLabel();
        order_passport = new javax.swing.JFormattedTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        order_city = new javax.swing.JComboBox<>();
        order_termin = new javax.swing.JComboBox<>();
        hotel_odrer_label = new javax.swing.JLabel();
        order_hotel = new javax.swing.JComboBox<>();
        kilkist_odrer_label = new javax.swing.JLabel();
        order_kilkist = new javax.swing.JSpinner();
        date_order = new javax.swing.JLabel();
        order_date = new javax.swing.JFormattedTextField();
        fon_labe2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pasport_lb = new javax.swing.JLabel();
        pib_lb = new javax.swing.JLabel();
        birthday_lb = new javax.swing.JLabel();
        phone_lb = new javax.swing.JLabel();
        email_lb = new javax.swing.JLabel();
        pasport_edit = new javax.swing.JFormattedTextField();
        birthday_edit = new javax.swing.JFormattedTextField();
        email_edit = new javax.swing.JTextField();
        pib_edit = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        phone_edit = new javax.swing.JFormattedTextField();
        fon_label1 = new javax.swing.JLabel();
        statuscheck_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TopTour");
        setBackground(new java.awt.Color(255, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);
        setLocation(new java.awt.Point(500, 500));
        setMinimumSize(new java.awt.Dimension(700, 550));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("E     X     I     T");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(102, 255, 255));
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(2000, 2000));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(700, 400));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(862, 833));

        jPanel3.setBackground(new java.awt.Color(102, 255, 255));
        jPanel3.setForeground(new java.awt.Color(51, 51, 255));
        jPanel3.setToolTipText("");
        jPanel3.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Клієнт(№ паспорта)");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(60, 20, 160, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Місто ");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(310, 20, 50, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Термін перебування");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(440, 20, 160, 20);

        pasport_filter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pasport_filter.setToolTipText("AA123456");
        pasport_filter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pasport_filter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pasport_filterFocusLost(evt);
            }
        });
        pasport_filter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pasport_filterMouseEntered(evt);
            }
        });
        pasport_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasport_filterActionPerformed(evt);
            }
        });
        pasport_filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pasport_filterKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pasport_filterKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pasport_filterKeyTyped(evt);
            }
        });
        jPanel3.add(pasport_filter);
        pasport_filter.setBounds(50, 50, 170, 30);

        filtre.setBackground(new java.awt.Color(0, 204, 204));
        filtre.setText("Фільтрувати");
        filtre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtreActionPerformed(evt);
            }
        });
        jPanel3.add(filtre);
        filtre.setBounds(30, 400, 190, 60);

        clear_zakazy.setText("Clear");
        clear_zakazy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_zakazyActionPerformed(evt);
            }
        });
        jPanel3.add(clear_zakazy);
        clear_zakazy.setBounds(630, 400, 180, 60);

        city_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*" }));
        city_ComboBox1.setToolTipText("");
        city_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city_ComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(city_ComboBox1);
        city_ComboBox1.setBounds(240, 50, 190, 30);

        hotel_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "0", "1", "2", "3", "4", "5" }));
        hotel_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotel_ComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(hotel_ComboBox1);
        hotel_ComboBox1.setBounds(610, 50, 200, 27);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Готель");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(680, 20, 70, 20);

        termin_ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        termin_ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termin_ComboBox1ActionPerformed(evt);
            }
        });
        termin_ComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                termin_ComboBox1PropertyChange(evt);
            }
        });
        jPanel3.add(termin_ComboBox1);
        termin_ComboBox1.setBounds(460, 50, 118, 30);

        update.setBackground(new java.awt.Color(153, 204, 0));
        update.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        update.setText("ОНОВИТИ");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel3.add(update);
        update.setBounds(320, 400, 230, 60);

        koshik.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        koshik.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Код замовлення", "Паспорт", "ПІБ Клієнта", "Місто", "Рейтинг готелю", "Кількість осіб", "Дата поїздки", "Тривалість", "Вартість"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        koshik.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        koshik.setMaximumSize(new java.awt.Dimension(700, 300));
        koshik.setMinimumSize(new java.awt.Dimension(700, 64));
        koshik.setName("table1"); // NOI18N
        koshik.setRowHeight(20);
        koshik.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(koshik);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(30, 90, 810, 300);

        fon_panel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fon_panel3.setForeground(new java.awt.Color(255, 255, 255));
        fon_panel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toptour/label-3.png"))); // NOI18N
        jPanel3.add(fon_panel3);
        fon_panel3.setBounds(0, 0, 870, 470);

        jTabbedPane1.addTab("База замовлень", jPanel3);

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setForeground(new java.awt.Color(51, 51, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(9000, 9000));
        jPanel2.setLayout(null);

        passport_odrer_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passport_odrer_label.setText("Клієнт (№ паспорта)");
        jPanel2.add(passport_odrer_label);
        passport_odrer_label.setBounds(59, 35, 172, 22);

        city_odrer_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        city_odrer_label.setText("Місто для поїздки");
        jPanel2.add(city_odrer_label);
        city_odrer_label.setBounds(59, 73, 147, 22);

        termin_odrer_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        termin_odrer_label.setText("Термін перебування (днів)");
        jPanel2.add(termin_odrer_label);
        termin_odrer_label.setBounds(59, 114, 220, 22);

        order_passport.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        order_passport.setToolTipText("AA123456");
        order_passport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        order_passport.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                order_passportFocusLost(evt);
            }
        });
        order_passport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                order_passportMouseEntered(evt);
            }
        });
        order_passport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_passportActionPerformed(evt);
            }
        });
        order_passport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                order_passportKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                order_passportKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                order_passportKeyTyped(evt);
            }
        });
        jPanel2.add(order_passport);
        order_passport.setBounds(430, 30, 170, 23);

        jButton4.setBackground(new java.awt.Color(0, 204, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton4.setText("Add");
        jButton4.setEnabled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(40, 363, 153, 63);

        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(532, 363, 149, 49);

        order_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_cityActionPerformed(evt);
            }
        });
        jPanel2.add(order_city);
        order_city.setBounds(382, 73, 320, 23);

        order_termin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        order_termin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_terminActionPerformed(evt);
            }
        });
        jPanel2.add(order_termin);
        order_termin.setBounds(463, 114, 102, 28);

        hotel_odrer_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        hotel_odrer_label.setText("Готель");
        jPanel2.add(hotel_odrer_label);
        hotel_odrer_label.setBounds(59, 160, 55, 22);

        order_hotel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));
        order_hotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_hotelActionPerformed(evt);
            }
        });
        jPanel2.add(order_hotel);
        order_hotel.setBounds(463, 161, 102, 27);

        kilkist_odrer_label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kilkist_odrer_label.setText("Кількість осіб");
        jPanel2.add(kilkist_odrer_label);
        kilkist_odrer_label.setBounds(59, 212, 189, 23);

        order_kilkist.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        order_kilkist.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        order_kilkist.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                order_kilkistAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        order_kilkist.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                order_kilkistStateChanged(evt);
            }
        });
        jPanel2.add(order_kilkist);
        order_kilkist.setBounds(426, 196, 163, 39);

        date_order.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        date_order.setText("Орієнтовна дата поїздки");
        jPanel2.add(date_order);
        date_order.setBounds(50, 262, 220, 23);

        try {
            order_date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        order_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        order_date.setText(""+localDate.plusDays(1)+"");
        order_date.setToolTipText("РРРР-ММ-ДД");
        order_date.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        order_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                order_dateMouseEntered(evt);
            }
        });
        order_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_dateActionPerformed(evt);
            }
        });
        order_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                order_dateKeyReleased(evt);
            }
        });
        jPanel2.add(order_date);
        order_date.setBounds(426, 253, 163, 35);

        fon_labe2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toptour/label-2.png"))); // NOI18N
        jPanel2.add(fon_labe2);
        fon_labe2.setBounds(-6, -6, 870, 480);

        jTabbedPane1.addTab("Оформлення замовлення", jPanel2);

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setForeground(new java.awt.Color(51, 51, 255));
        jPanel1.setLayout(null);

        pasport_lb.setBackground(new java.awt.Color(255, 255, 51));
        pasport_lb.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        pasport_lb.setText("Серія та номер Паспорта");
        jPanel1.add(pasport_lb);
        pasport_lb.setBounds(40, 20, 270, 28);

        pib_lb.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        pib_lb.setText("П.І.Б. клієнта");
        jPanel1.add(pib_lb);
        pib_lb.setBounds(490, 20, 170, 28);

        birthday_lb.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        birthday_lb.setText("Дата народження");
        jPanel1.add(birthday_lb);
        birthday_lb.setBounds(60, 170, 179, 28);

        phone_lb.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        phone_lb.setText("Телефон");
        jPanel1.add(phone_lb);
        phone_lb.setBounds(530, 170, 89, 28);

        email_lb.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        email_lb.setText("E-mail");
        jPanel1.add(email_lb);
        email_lb.setBounds(380, 270, 64, 28);

        try {
            pasport_edit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AA######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pasport_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pasport_edit.setToolTipText("AA123456");
        pasport_edit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pasport_edit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pasport_editFocusLost(evt);
            }
        });
        pasport_edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pasport_editMouseEntered(evt);
            }
        });
        pasport_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasport_editActionPerformed(evt);
            }
        });
        pasport_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pasport_editKeyReleased(evt);
            }
        });
        jPanel1.add(pasport_edit);
        pasport_edit.setBounds(50, 60, 230, 50);

        try {
            birthday_edit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        birthday_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        birthday_edit.setText(""+localDate.minusYears(17)+"");
        birthday_edit.setToolTipText("РРРР-ММ-ДД");
        birthday_edit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        birthday_edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                birthday_editMouseEntered(evt);
            }
        });
        birthday_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthday_editActionPerformed(evt);
            }
        });
        birthday_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                birthday_editKeyReleased(evt);
            }
        });
        jPanel1.add(birthday_edit);
        birthday_edit.setBounds(40, 210, 240, 50);

        email_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        email_edit.setSelectionColor(new java.awt.Color(153, 255, 0));
        email_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_editActionPerformed(evt);
            }
        });
        jPanel1.add(email_edit);
        email_edit.setBounds(243, 304, 341, 28);

        pib_edit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        pib_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pib_edit.setToolTipText("Іванов Іван Іванович");
        pib_edit.setSelectionColor(new java.awt.Color(153, 255, 0));
        pib_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pib_editActionPerformed(evt);
            }
        });
        pib_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pib_editKeyReleased(evt);
            }
        });
        jPanel1.add(pib_edit);
        pib_edit.setBounds(360, 60, 430, 50);

        jButton1.setBackground(new java.awt.Color(0, 0, 255));
        jButton1.setFont(new java.awt.Font("Wide Latin", 0, 36)); // NOI18N
        jButton1.setText("Add");
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(50, 350, 175, 61);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(620, 370, 108, 38);

        try {
            phone_edit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("380#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        phone_edit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone_edit.setToolTipText("380987654321");
        phone_edit.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        phone_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phone_editActionPerformed(evt);
            }
        });
        phone_edit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phone_editKeyReleased(evt);
            }
        });
        jPanel1.add(phone_edit);
        phone_edit.setBounds(360, 210, 430, 50);

        fon_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toptour/label-1.png"))); // NOI18N
        jPanel1.add(fon_label1);
        fon_label1.setBounds(0, 0, 862, 470);

        jTabbedPane1.addTab("Реєстрація Клієнта", jPanel1);

        statuscheck_label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        statuscheck_label.setText(""+status+""        );
        statuscheck_label.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                statuscheck_labelMouseMoved(evt);
            }
        });
        statuscheck_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statuscheck_labelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(statuscheck_label, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(statuscheck_label, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void statuscheck_labelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statuscheck_labelMouseMoved
statuscheck_label.setText(pingUrl.pingUrl());
    }//GEN-LAST:event_statuscheck_labelMouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
      statuscheck_label.setText(pingUrl.pingUrl());  
    }//GEN-LAST:event_formMouseMoved

    private void statuscheck_labelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statuscheck_labelMouseEntered
statuscheck_label.setText(pingUrl.pingUrl());
        //JOptionPane.showMessageDialog(null, "" + status + "", "ERROR", JOptionPane.ERROR_MESSAGE);        // TODO add your handling code here:
    }//GEN-LAST:event_statuscheck_labelMouseEntered

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
statuscheck_label.setText(pingUrl.pingUrl());        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
statuscheck_label.setText(pingUrl.pingUrl());        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowLostFocus

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
statuscheck_label.setText(pingUrl.pingUrl());        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
statuscheck_label.setText(pingUrl.pingUrl());        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusLost

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        //--ЧИСТКА ТАБЛИЦЫ ПЕРЕД ЗАПОЛНЕНИЕМ-------------------------------------

        ((DefaultTableModel)koshik.getModel()).setRowCount(0);
        //---------------------------------------------
        updateTableMYSQL() ; 
        pasport_filter.setText(null);
        city_ComboBox1.setSelectedItem("*");  
        termin_ComboBox1.setSelectedItem("-"); 
        hotel_ComboBox1.setSelectedItem("*"); 
    }//GEN-LAST:event_updateActionPerformed

    private void hotel_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotel_ComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotel_ComboBox1ActionPerformed

    private void city_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city_ComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city_ComboBox1ActionPerformed

    private void clear_zakazyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_zakazyActionPerformed
        city_ComboBox1.setSelectedItem("*");
        termin_ComboBox1.setSelectedItem("-");
        hotel_ComboBox1.setSelectedItem("*");
        pasport_filter.setText(null);
        ((DefaultTableModel)koshik.getModel()).setRowCount(0);
    }//GEN-LAST:event_clear_zakazyActionPerformed

    private void filtreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtreActionPerformed
        //--ЧИСТКА ТАБЛИЦЫ ПЕРЕД ЗАПОЛНЕНИЕМ-------------------------------------

        ((DefaultTableModel)koshik.getModel()).setRowCount(0);
        //---------------------------------------------
        MysqlConnect n=new MysqlConnect();
        n.bd(SQL, con, stmt, rs);
             con=n.bd(SQL, con, stmt, rs);

        try {
            //ФИЛЬТРОВАНИЕ ТАБЛИЦЫ------------------------------------------
            String passp_filter,city_filter,termin_filter,hotel_filter;
            //Passport filter ----------------------------------------------
            if(pasport_filter.getText().equals("")){passp_filter="";}
            else{ passp_filter="where klient.passport_nom='"+pasport_filter.getText()+"'";}
            //CITY_FILTER---------------------------------------------------
            if(city_ComboBox1.getSelectedItem()=="*"){city_filter="";}
            else {
                
                if(pasport_filter.getText()=="")city_filter="where putivka.city='"+city_ComboBox1.getSelectedItem()+"'";
                else city_filter=" and putivka.city='"+city_ComboBox1.getSelectedItem()+"'";
            
            }
            //TERMIN_FILTER-----------------------------------------------
            if (termin_ComboBox1.getSelectedItem()=="-") termin_filter = "";
            else{ if (city_filter == ""&&pasport_filter.getText()=="") termin_filter =             "where order.termin='"+termin_ComboBox1.getSelectedItem()+"'";

                else termin_filter =  "and order.termin='"+termin_ComboBox1.getSelectedItem()+"'";}
            //HOTEL_FILTER--------------------------------------------------
            if (hotel_ComboBox1.getSelectedItem()=="*") hotel_filter = "";
            else{ if (city_filter == "" && termin_filter==""&&pasport_filter.getText()=="") hotel_filter ="where order.zirk_hotel='"+hotel_ComboBox1.getSelectedItem()+"'";

                else hotel_filter =  "and order.zirk_hotel='"+hotel_ComboBox1.getSelectedItem()+"'";}

            SQL="SELECT kod_order, passport_nomer,klient.pib_kl, city, zirk_hotel, kilkist_osib, date_putivka, termin,kilkist_osib* (putivka.price + hotel.price) as `Вартість`\n" +
"FROM \n" +
"\n" +
"`order`\n" +
"INNER JOIN hotel \n" +
"ON order.zirk_hotel=hotel.zirka \n" +
"INNER JOIN putivka\n" +
"ON order.kod_putivky = putivka.kod_putiv\n" +
"INNER JOIN klient\n" +
"ON order.passport_nomer = klient.passport_nom \n"
  
            +passp_filter+city_filter+termin_filter+hotel_filter +"\n"+
                    "ORDER BY order.kod_order"
                    ;
//System.out.println(""+passp_filter+"    "+city_filter+"    "+termin_filter+"    "+hotel_filter+"");
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);

            // Iterate through the data in the result set and display it.
            while (rs.next()) {

                ((DefaultTableModel)koshik.getModel()).addRow( new Object[]{rs.getString(1),
                    rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)
                    ,rs.getString(7),rs.getString(8),rs.getString(9)} );
            //System.out.println(rs.getString(1) + " | " + rs.getString(2)+ " | " + rs.getString(3)+ " | " + rs.getString(4)+ " | " + rs.getString(5)+ " | " + rs.getString(6)+ " | " + rs.getString(7)+ " | " + rs.getString(8));

        }
        int rows = koshik.getRowCount();
        if (rows==0){JOptionPane.showMessageDialog(null, " За вашим запитом \n"+"даних НЕ ЗНАЙДЕНО!","Update", JOptionPane.WARNING_MESSAGE);
        }
        else {JOptionPane.showMessageDialog(null, "Відфільтровано","Update", JOptionPane.INFORMATION_MESSAGE);}
        //JOptionPane.showMessageDialog (null, "Your order is successfully registered", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error",
                "Update", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        finally {

            if (rs != null) try { rs.close(); } catch(Exception e) {}
            if (stmt != null) try { stmt.close(); } catch(Exception e) {}
            if (con != null) try { con.close(); } catch(Exception e) {}
        }

    }//GEN-LAST:event_filtreActionPerformed

    private void order_dateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_order_dateKeyReleased

    }//GEN-LAST:event_order_dateKeyReleased

    private void order_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_order_dateActionPerformed

    private void order_dateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_order_dateMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_order_dateMouseEntered

    private void order_kilkistStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_order_kilkistStateChanged
        if ( order_city.getSelectedItem() == "-" || order_termin.getSelectedItem() == "-" || order_hotel.getSelectedItem() == "-" || "".equals(order_passport.getText()) || (Integer) order_kilkist.getValue()==0)
        {
            jButton4.setEnabled(false);
        }
        else
        jButton4.setEnabled(true);
    }//GEN-LAST:event_order_kilkistStateChanged

    private void order_kilkistAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_order_kilkistAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_order_kilkistAncestorAdded

    private void order_hotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_hotelActionPerformed
        if ( order_city.getSelectedItem() == "-" || order_termin.getSelectedItem() == "-"|| order_hotel.getSelectedItem() == "-" || "".equals(order_passport.getText())|| (Integer) order_kilkist.getValue()==0)
        {
            jButton4.setEnabled(false);
        }
        else
        jButton4.setEnabled(true);
    }//GEN-LAST:event_order_hotelActionPerformed

    private void order_terminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_terminActionPerformed
        if ( order_city.getSelectedItem() == "-" || order_termin.getSelectedItem() == "-"|| order_hotel.getSelectedItem() == "-" || "".equals(order_passport.getText())|| (Integer) order_kilkist.getValue()==0)
        {
            jButton4.setEnabled(false);
        }
        else
        jButton4.setEnabled(true);

    }//GEN-LAST:event_order_terminActionPerformed

    private void order_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_cityActionPerformed
        if ( order_city.getSelectedItem() == "-" || order_termin.getSelectedItem() == "-"|| order_hotel.getSelectedItem() == "-" || "".equals(order_passport.getText())|| (Integer) order_kilkist.getValue()==0)
        {
            jButton4.setEnabled(false);
        }
        else
        jButton4.setEnabled(true);
    }//GEN-LAST:event_order_cityActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        order_passport.setText("");
        order_city.setSelectedItem("Львів");
        order_termin.setSelectedItem("-");
        order_hotel.setSelectedItem("0");
        order_kilkist.setValue(0);
        order_date.setText(""+localDate.plusDays(1)+"");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        String passport,city,termin,hotel, date_putivka;
        int kilkist,city_index;

        // We have to parse the text to a type float.
        passport = order_passport.getText();
        city = (String) order_city.getSelectedItem();
        termin = (String) order_termin.getSelectedItem();
        hotel = (String) order_hotel.getSelectedItem();
        kilkist = (Integer) order_kilkist.getValue();
        date_putivka=(String) order_date.getText();
        city_index=order_city.getSelectedIndex();

        //System.out.println(passport+"_"+city_index+"_"+hotel+"_"+kilkist+"_"+date_putivka+"_"+termin);

        MysqlConnect n=new MysqlConnect();
        n.bd(SQL, con, stmt, rs);
        con=n.bd(SQL, con, stmt, rs);

        try {
            SQL="INSERT INTO `toptour`.`order` (`passport_nomer`, `kod_putivky`, `zirk_hotel`, `kilkist_osib`, `date_putivka`, `termin`) \n" + "Values('"+passport+"','"+city_index+"','"+hotel+"','"+kilkist+"','"+date_putivka+"','"+termin+"')";
            //SQL="INSERT into Klient ([passport_nom],[pib_kl],[birthday],[phone],[e-mail])\n" + "Values('"+passport+"','"+pib+"','"+birthday+"','"+phone+"','"+email+"')";
            stmt=con.createStatement();
            stmt.executeUpdate(SQL);
            order_passport.setText("");
            order_city.setSelectedItem("Львів");
            order_termin.setSelectedItem("-");
            order_hotel.setSelectedItem("0");
            order_kilkist.setValue(0);
            order_date.setText(""+localDate.plusDays(1)+"");
            JOptionPane.showMessageDialog (null, "Ваше замовлення успішно додано!\n"+" З Вами зв'яжеться наш представник\n"+"для підтвердження заявки та уточнення деталей", "Success", JOptionPane.INFORMATION_MESSAGE);

        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, " Помилка !:\n"+"! Невірні дані !", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        finally {

            if (rs != null) try { rs.close(); } catch(Exception e) {}
            if (stmt != null) try { stmt.close(); } catch(Exception e) {}
            if (con != null) try { con.close(); } catch(Exception e) {}
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered

    }//GEN-LAST:event_jButton4MouseEntered

    private void phone_editKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phone_editKeyReleased
        if ( "        ".equals(pasport_edit.getText())||"".equals(pib_edit.getText())||"  -  -    ".equals(birthday_edit.getText())) {
            jButton1.setEnabled(false);
        } else jButton1.setEnabled(true);
    }//GEN-LAST:event_phone_editKeyReleased

    private void phone_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phone_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phone_editActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        pasport_edit.setText("");
        pib_edit.setText("");
        birthday_edit.setText(""+localDate.minusYears(17)+"");
        phone_edit.setText("");
        email_edit.setText("");
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // First we define float variables.
        String passport,pib,email,birthday,phone_0;

        // We have to parse the text to a type float.
        passport = pasport_edit.getText();
        pib = pib_edit.getText();
        birthday = birthday_edit.getText();
        phone_0=phone_edit.getText();
        long phone=Long.parseLong(phone_0);

        email=email_edit.getText();

        MysqlConnect n=new MysqlConnect();
        n.bd(SQL, con, stmt, rs);
      
      con=n.bd(SQL, con, stmt, rs);

        try { 

            SQL="INSERT INTO `toptour`.`klient` (`passport_nom`, `pib_kl`, `birthday`, `phone`, `email`)\n" +
                    "Values('"+passport+"','"+pib+"','"+birthday+"','"+phone+"','"+email+"')";
            
            
            stmt=con.createStatement();
            stmt.executeUpdate(SQL);
            pasport_edit.setText("");
            pib_edit.setText("");
            birthday_edit.setText(""+localDate.minusYears(17)+"");
            phone_edit.setText("");
            email_edit.setText("");
            
            
            if ( "".equals(pasport_edit.getText())||"".equals(pib_edit.getText())||"  -  -    ".equals(birthday_edit.getText())) {
                jButton1.setEnabled(false);
            } else jButton1.setEnabled(true);
            JOptionPane.showMessageDialog (null, " Клієнта '"+pib+"' успішно додано", "Success", JOptionPane.INFORMATION_MESSAGE);
            
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, " Помилка !:\n"+"! Невірні дані !", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
        finally {

            if (rs != null) try { rs.close(); } catch(Exception e) {}
            if (stmt != null) try { stmt.close(); } catch(Exception e) {}
            if (con != null) try { con.close(); } catch(Exception e) {}
        }

        // change the value of result from a float to a string.

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased

    }//GEN-LAST:event_jButton1MouseReleased

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered

    }//GEN-LAST:event_jButton1MouseEntered

    private void pib_editKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pib_editKeyReleased
        if ( "        ".equals(pasport_edit.getText())||"".equals(pib_edit.getText())||"  -  -    ".equals(birthday_edit.getText())) {
            jButton1.setEnabled(false);
        } else jButton1.setEnabled(true);
    }//GEN-LAST:event_pib_editKeyReleased

    private void pib_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pib_editActionPerformed

    }//GEN-LAST:event_pib_editActionPerformed

    private void email_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_editActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_editActionPerformed

    private void birthday_editKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_birthday_editKeyReleased
        if ( "        ".equals(pasport_edit.getText())||"".equals(pib_edit.getText())||"  -  -    ".equals(birthday_edit.getText())) {
            jButton1.setEnabled(false);
        } else jButton1.setEnabled(true);
    }//GEN-LAST:event_birthday_editKeyReleased

    private void birthday_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthday_editActionPerformed

    }//GEN-LAST:event_birthday_editActionPerformed

    private void birthday_editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_birthday_editMouseEntered
        // LocalDate localDate=LocalDate.now();
        //   birthday_edit.setText(""+localDate+"");
        // JOptionPane.showMessageDialog (null, "<"+localDate+">", "Success", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_birthday_editMouseEntered

    private void pasport_editKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pasport_editKeyReleased
pasport_edit.setText(pasport_edit.getText().toUpperCase());
        if ( "        ".equals(pasport_edit.getText())||"".equals(pib_edit.getText())||"  -  -    ".equals(birthday_edit.getText())) {
            jButton1.setEnabled(false);
        } else jButton1.setEnabled(true);
    }//GEN-LAST:event_pasport_editKeyReleased

    private void pasport_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasport_editActionPerformed

    }//GEN-LAST:event_pasport_editActionPerformed

    private void pasport_editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasport_editMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pasport_editMouseEntered

    private void pasport_editFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pasport_editFocusLost
        pasport_edit.setText(pasport_edit.getText().toUpperCase());
    }//GEN-LAST:event_pasport_editFocusLost

    private void termin_ComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_termin_ComboBox1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_termin_ComboBox1PropertyChange

    private void termin_ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termin_ComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_termin_ComboBox1ActionPerformed

    private void order_passportFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_order_passportFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_order_passportFocusLost

    private void order_passportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_order_passportMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_order_passportMouseEntered

    private void order_passportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_passportActionPerformed
       /* int length=order_passport.getText().length();
        
         JOptionPane.showMessageDialog(null, "LENGTH="+length+"","LENGTH",
                 JOptionPane.INFORMATION_MESSAGE);
*/
// TODO add your handling code here:
    }//GEN-LAST:event_order_passportActionPerformed

    private void order_passportKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_order_passportKeyReleased
order_passport.setText(order_passport.getText().toUpperCase()); 
int length=order_passport.getText().length();
String rever = null,rev1;
if(length>8)
{rever = new StringBuffer(order_passport.getText()).reverse().toString().substring(1);
 rev1=new StringBuffer(rever).reverse().toString().toUpperCase(); 
     order_passport.setText(rev1);
}        // TODO add your handling code here:
    }//GEN-LAST:event_order_passportKeyReleased

    private void order_passportKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_order_passportKeyTyped

    

// TODO add your handling code here:
    }//GEN-LAST:event_order_passportKeyTyped

    private void order_passportKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_order_passportKeyPressed
         // TODO add your handling code here:
     
       
        order_passport.setText(order_passport.getText().toUpperCase()); 
int length=order_passport.getText().length();
String rever = null,rev1;
if(length>8)
{rever = new StringBuffer(order_passport.getText()).reverse().toString().substring(1);
 rev1=new StringBuffer(rever).reverse().toString().toUpperCase(); 
     order_passport.setText(rev1);
}
       
    }//GEN-LAST:event_order_passportKeyPressed

    private void pasport_filterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pasport_filterFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_pasport_filterFocusLost

    private void pasport_filterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pasport_filterMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pasport_filterMouseEntered

    private void pasport_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasport_filterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasport_filterActionPerformed

    private void pasport_filterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pasport_filterKeyPressed
          
       pasport_filter.setText(pasport_filter.getText().toUpperCase()); 
int length=pasport_filter.getText().length();
String rever = null,rev1;
if(length>8)
{rever = new StringBuffer(pasport_filter.getText()).reverse().toString().substring(1);
 rev1=new StringBuffer(rever).reverse().toString().toUpperCase(); 
     pasport_filter.setText(rev1);
}
       
    }//GEN-LAST:event_pasport_filterKeyPressed

    private void pasport_filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pasport_filterKeyReleased
    
       pasport_filter.setText(pasport_filter.getText().toUpperCase()); 
int length=pasport_filter.getText().length();
String rever = null,rev1;
if(length>8)
{rever = new StringBuffer(pasport_filter.getText()).reverse().toString().substring(1);
 rev1=new StringBuffer(rever).reverse().toString().toUpperCase(); 
     pasport_filter.setText(rev1);
}
               // TODO add your handling code here:
    }//GEN-LAST:event_pasport_filterKeyReleased

    private void pasport_filterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pasport_filterKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_pasport_filterKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new View().setVisible(true);
                new LOGIN().setVisible(true);
            }
        });
    }
   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField birthday_edit;
    private javax.swing.JLabel birthday_lb;
    private javax.swing.JComboBox<String> city_ComboBox1;
    private javax.swing.JLabel city_odrer_label;
    private javax.swing.JButton clear_zakazy;
    private javax.swing.JLabel date_order;
    private javax.swing.JTextField email_edit;
    private javax.swing.JLabel email_lb;
    private javax.swing.JButton filtre;
    private javax.swing.JLabel fon_labe2;
    private javax.swing.JLabel fon_label1;
    private javax.swing.JLabel fon_panel3;
    private javax.swing.JComboBox<String> hotel_ComboBox1;
    private javax.swing.JLabel hotel_odrer_label;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel kilkist_odrer_label;
    private javax.swing.JTable koshik;
    private javax.swing.JComboBox<String> order_city;
    private javax.swing.JFormattedTextField order_date;
    private javax.swing.JComboBox<String> order_hotel;
    private javax.swing.JSpinner order_kilkist;
    public javax.swing.JFormattedTextField order_passport;
    private javax.swing.JComboBox<String> order_termin;
    private javax.swing.JFormattedTextField pasport_edit;
    public javax.swing.JFormattedTextField pasport_filter;
    private javax.swing.JLabel pasport_lb;
    private javax.swing.JLabel passport_odrer_label;
    private javax.swing.JFormattedTextField phone_edit;
    private javax.swing.JLabel phone_lb;
    private javax.swing.JTextField pib_edit;
    private javax.swing.JLabel pib_lb;
    public javax.swing.JLabel statuscheck_label;
    private javax.swing.JComboBox<String> termin_ComboBox1;
    private javax.swing.JLabel termin_odrer_label;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

  
private void comboFILL(){
  // Create a variable for the connection string.  
      
  
      // Declare the JDBC objects.
       MysqlConnect n=new MysqlConnect();
        n.bd(SQL, con, stmt, rs);
       //n.BD(con,stmt,rs,SQL);
      // con=n.BD(con,stmt,rs,SQL);
      con=n.bd(SQL, con, stmt, rs);
       
     
      try {  
         // Establish the connection.  
                 
         // Create and execute an SQL statement that returns some data.  
          SQL = "SELECT * FROM putivka";  
         stmt = con.createStatement();  
         rs = stmt.executeQuery(SQL);  
  
         // Iterate through the data in the result set and display it.  
         while (rs.next()) {  
String city=rs.getString("city");
             order_city.addItem(city);
             city_ComboBox1.addItem(city);
//System.out.println(rs.getString(1) + " | " + rs.getString(2)+ " | " + rs.getString(3));  
         }  
      }  
  
      // Handle any errors that may have occurred.  
      catch (Exception e) {  
         e.printStackTrace();  
      }  
      finally {  
         if (rs != null) try { rs.close(); } catch(Exception e) {}  
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}  
         if (con != null) try { con.close(); } catch(Exception e) {}  
      }
}
//---------------------------ОБновление таблицы при запуске программы--------------
    
     private void updateTableMYSQL() {
         
          //--ЧИСТКА ТАБЛИЦЫ ПЕРЕД ЗАПОЛНЕНИЕМ-------------------------------------
        
  ((DefaultTableModel)koshik.getModel()).setRowCount(0);
        //---------------------------------------------
         MysqlConnect n=new MysqlConnect();
        n.bd(SQL, con, stmt, rs);
       //n.BD(con,stmt,rs,SQL);
      // con=n.BD(con,stmt,rs,SQL);
      con=n.bd(SQL, con, stmt, rs);
       
        try {
            
          SQL="SELECT kod_order, passport_nomer,klient.pib_kl, city, zirk_hotel, kilkist_osib, date_putivka, termin,kilkist_osib* (putivka.price + hotel.price) as `Вартість`\n" +
"FROM \n" +
"\n" +
"`order`\n" +
"INNER JOIN hotel \n" +
"ON order.zirk_hotel=hotel.zirka \n" +
"INNER JOIN putivka\n" +
"ON order.kod_putivky = putivka.kod_putiv\n" +
"INNER JOIN klient\n" +
"ON order.passport_nomer = klient.passport_nom \n"+
  "ORDER BY order.kod_order";
             
           
         stmt = con.createStatement();  
         rs = stmt.executeQuery(SQL);  
 
         // Iterate through the data in the result set and display it.  
         while (rs.next()) {  
                  
            ((DefaultTableModel)koshik.getModel()).addRow( new Object[]{rs.getString(1),
              rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)
          ,rs.getString(7),rs.getString(8),rs.getString(9)} ); 
//System.out.println(rs.getString(1) + " | " + rs.getString(2)+ " | " + rs.getString(3)+ " | " + rs.getString(4)+ " | " + rs.getString(5)+ " | " + rs.getString(6)+ " | " + rs.getString(7)+ " | " + rs.getString(8));  
          
         }  
                } 
        catch (Exception e) { 
           
            JOptionPane.showMessageDialog(null, "Error",
                "Update", JOptionPane.ERROR_MESSAGE);
                
         e.printStackTrace();  
      }  
      finally {  
             
         if (rs != null) try { rs.close(); } catch(Exception e) {}  
         if (stmt != null) try { stmt.close(); } catch(Exception e) {}  
         if (con != null) try { con.close(); } catch(Exception e) {}  
         
      }
        
           
    
    }
    
    
}
